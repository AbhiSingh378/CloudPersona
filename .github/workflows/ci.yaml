name: Python CI

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: patient
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install Flask SQLAlchemy mysqlclient pytest pytest-flask pymysql python-dotenv Flask-SQLAlchemy flask-httpauth cryptography

      - name: Create MySQL user
        run: |
          docker exec ${{ job.services.mysql.id }} \
          mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "CREATE USER '${{ secrets.MYSQL_USER }}'@'%' IDENTIFIED BY '${{ secrets.MYSQL_PASSWORD }}'; \
          GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.MYSQL_USER }}'@'%'; FLUSH PRIVILEGES;"

      - name: Create .env file
        run: |
          echo "FLASK_APP=webapp.py" >> .env
          echo "FLASK_ENV=development" >> .env
          echo "SQLALCHEMY_DATABASE_URI=mysql+pymysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@localhost/patient" >> .env
          echo "HOSTNAME=0.0.0.0" >> .env

      - name: Wait for MySQL to be ready
        run: sleep 15s

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest
